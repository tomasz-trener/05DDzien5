<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>